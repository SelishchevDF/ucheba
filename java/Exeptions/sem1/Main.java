package sem1;

// Реализуйте 3 метода, чтобы в каждом из них получить разные исключения
// Посмотрите на код, и подумайте сколько разных типов исключений вы тут сможете получить?
// Реализуйте метод, принимающий в качестве аргументов два целочисленных массива, и возвращающий новый массив,
// каждый элемент которого равен разности элементов двух входящих массивов в той же ячейке. Если длины массивов не равны, 
// необходимо как-то оповестить пользователя.
// * Реализуйте метод, принимающий в качестве аргументов два целочисленных массива, и возвращающий новый массив, 
// каждый элемент которого равен частному элементов двух входящих массивов в той же ячейке. Если длины массивов не равны, 
// необходимо как-то оповестить пользователя.
// Важно: При выполнении метода единственное исключение, которое пользователь может увидеть - RuntimeException, т.е. ваше.

public class Main {

    public static void main(String[] args) {
        
        //1)
        Array a1 = new Array(-5);

        Array a2 = new Array(5);
        System.out.println("длина - " + a2.size());
        System.out.println(a2);

        Array a3 = new Array(5);
        System.out.println("длина - " + a3.size());
        System.out.println(a3);

        //2)
        int [] a4 = ArraysSubstraction.arraysSubstraction(a2.getArr(), a3.getArr());
        System.out.println(a4);
        //3)
        float [] a5 = ArraysDiv.arraysDiv(a2.getArr(), a3.getArr());
        System.out.println(a5);

        int [] b1 = {1,2,3};
        int [] b2 = {1,2,3};
        float [] a6 = ArraysDiv.arraysDiv(b1, b2);
        System.out.println(a6);
    }
}